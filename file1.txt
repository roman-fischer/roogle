Eintrag 1


git commit -a

git clone <repository-path> [<target-dir>]


Exchanging patches¶
Creating a patch¶

You can use git format-patch command to generate patches with your commits to be e-mailed. These e-mails can be used either for reviewing or for applying the patches directly from them.

The syntax you need to use is: git format-patch <base-branch>..<your-development-branch> which will give you patches with all the commits which need to be applied to <base-branch> to get it to the state of <your-development-branch>.

In your situation, the command would look like this (giving you patches from origin to the HEAD of the development branch):

$  git format-patch origin..<your-development-branch>

You can also generate Git specific patches (which track properly renames) using "-M -B" for format-patch:

$  git format-patch -M -B origin..<your-development-branch>

Applying a patch¶

To apply a patch received via e-mail (generated by git format-patch) you can use:

$ git am <patch-file>


# writes the last (N) commits on the current HEAD revision to files 0001-..., 0002-...
git format-patch -k -s -1

Applying Patchsets

# applies patchset to current branch
git am -k foo.patch

In case of a conflict, we can roll back the changes, e.g.:

git am --abort

See also the git am --interactive option.




http://www.kernel.org/pub/software/scm/git/docs/v1.2.6/git-format-patch.html



github ausprobiert:
C:\Dokumente und Einstellungen\roman\Eigene Dateien\GIT.txt